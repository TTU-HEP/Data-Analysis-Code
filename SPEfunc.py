#Converting WIP 8/12/2024 - Michael O'Donnell

import ROOT
import math
import numpy as np
from scipy.special import factorial
from scipy.stats import norm, poisson, expon

def crystal_ball(x, p):
    if (x[0] - p[1]) / p[2] > -p[3]:
        return p[0] * np.exp(-0.5 * ((x[0] - p[1]) / p[2]) ** 2)
    else:
        A = (p[4] / abs(p[3])) ** p[4] * np.exp(-0.5 * p[3] ** 2)
        B = p[4] / abs(p[3]) - abs(p[3])
        return A * (B - ((x[0] - p[1]) / p[2]) ** -p[4])

def gaufun(x, par):
    return par[2] * np.exp(-0.5 * ((x[0] - par[1]) / par[2]) ** 2)
    
def landau(x, mp, eta):
    return np.exp(-0.5 * ((x - mp) / eta + np.exp(-(x - mp) / eta)))
    
def langaufun(x, par):
    invsq2pi = 0.3989422804014
    mpshift = -0.22278298

    np_steps = 200
    sc = 5

    mpc = par[1] - mpshift * par[0]

    xlow = x - sc * par[3]
    xupp = x + sc * par[3]
    step = (xupp - xlow) / np_steps

    sum_val = 0

    for i in range(1, int(np_steps / 2) + 1):
        xx = xlow + (i - 0.5) * step
        fland = landau(xx, mpc, par[0]) / par[0]
        sum_val += fland * norm.pdf(x, xx, par[3])

        xx = xupp - (i - 0.5) * step
        fland = landau(xx, mpc, par[0]) / par[0]
        sum_val += fland * norm.pdf(x, xx, par[3])
        return par[2] * step * sum_val * invsq2pi / par[3]

class PPEFunc:
    def __init__(self, nPeak, domip):
        self.n = 4
        self.domip_ = domip
        self.nPeaks_ = nPeak
        self.nTotalPeaks_ = 15

        self.CPn = []
        self.s = [0.0] * (self.nTotalPeaks_ + 1)
        self.cp = [0.0] * (self.nTotalPeaks_ + 1)
        self.sc = [0.0] * (self.nTotalPeaks_ + 1)
        self.funcs = []
        self.funcMIP = None

        self.CPn.append(0)
        self.CPn.append(1)
        self.CPn.append(self.n)
        self.CPn.append((self.n * (-1 + 3*self.n)) / 2)
        self.CPn.append((self.n*(1 - 6*self.n + 8*pow(self.n, 2))) / 3)
        self.CPn.append((self.n*(-3 + 5*self.n)*(-2 + 5*self.n)*(-1 + 5*self.n)) / 24)
        self.CPn.append((self.n*(-1 + 2*self.n)*(-2 + 3*self.n)*(-1 + 3*self.n)*(-1 + 6*self.n)) / 10)
        self.CPn.append((self.n*(-5 + 7*self.n)*(-4 + 7*self.n)*(-3 + 7*self.n)*(-2 + 7*self.n)*(-1 + 7*self.n)) / 720)
        self.CPn.append((self.n*(-1 + 2*self.n)*(-3 + 4*self.n)*(-1 + 4*self.n)*(-5 + 8*self.n)*(-3 + 8*self.n)*(-1 + 8*self.n)) / 315)
        self.CPn.append((self.n*(-2 + 3*self.n)*(-1 + 3*self.n)*(-7 + 9*self.n)*(-5 + 9*self.n)*(-4 + 9*self.n)*(-2 + 9*self.n)*(-1 + 9*self.n)) / 4480)
        self.CPn.append((self.n*(-1 + 2*self.n)*(-4 + 5*self.n)*(-3 + 5*self.n)*(-2 + 5*self.n)*(-1 + 5*self.n)*(-7 + 10*self.n)*(-3 + 10*self.n)*(-1 + 10*self.n)) / 4536)
        self.CPn.append((self.n*(-9 + 11*self.n)*(-8 + 11*self.n)*(-7 + 11*self.n)*(-6 + 11*self.n)*(-5 + 11*self.n)*(-4 + 11*self.n)*(-3 + 11*self.n)*(-2 + 11*self.n)*(-1 + 11*self.n)) / 3.6288e6)
        self.CPn.append((self.n*(-1 + 2*self.n)*(-2 + 3*self.n)*(-1 + 3*self.n)*(-3 + 4*self.n)*(-1 + 4*self.n)*(-5 + 6*self.n)*(-1 + 6*self.n)*(-7 + 12*self.n)*(-5 + 12*self.n)*(-1 + 12*self.n)) / 11550)
        self.CPn.append((self.n*(-11 + 13*self.n)*(-10 + 13*self.n)*(-9 + 13*self.n)*(-8 + 13*self.n)*(-7 + 13*self.n)*(-6 + 13*self.n)*(-5 + 13*self.n)*(-4 + 13*self.n)*(-3 + 13*self.n)*(-2 + 13*self.n)*(-1 + 13*self.n)) / 4.790016e8)
        self.CPn.append((self.n*(-1 + 2*self.n)*(-6 + 7*self.n)*(-5 + 7*self.n)*(-4 + 7*self.n)*(-3 + 7*self.n)*(-2 + 7*self.n)*(-1 + 7*self.n)*(-11 + 14*self.n)*(-9 + 14*self.n)*(-5 + 14*self.n)*(-3 + 14*self.n)*(-1 + 14*self.n)) / 1.38996e7)
        self.CPn.append((pow(self.n,2)*(19802759040 + self.n*(-425547472896 + self.n*(4895614496136 + self.n*(-36007056781696 + self.n*(180954419071426 + self.n*(-643524004371248 + self.n*(1648017660281993 + self.n*(-3051606955645248 + self.n*(4048835387589993 + self.n*(-3751975766595056 + self.n*(2305159936523171 + self.n*(-843351196289056 + 139013933454241*self.n))))))))))))) / 6.2270208e9)

        self.funcs.append(lambda x, *params: norm.pdf(x, loc = params[0], scale = params[1]))
        for i in range(1, self.nTotalPeaks_ + 1):
            self.funcs.append(lambda x, *params: norm.pdf(x, loc = params[0], scale = params[1]))
        
        self.funcs.append(lambda x, *params: self.landau(x, *params))
        self.funcMIP = lambda x, *params: self.langaufun(x, *params)

        def landau(self, x, *params):
            return np.exp(-0.5 * ((x - params[0]) / params[1] + np.exp(-(x - params[0]) / params[1])))
        
        def langaufun(self, x, *params):
            return params[2] * params[3] * np.sum([np.exp(-0.5 * ((x - p) / params[1])**2) for p in params[:4]])
        
        def ppe_func(x, p, CPn, h, funcs, nTotalPeaks, nPeaks, sc):
            s = np.array([poisson.pmf(i, p[6]) for i in range(nTotalPeaks + 1)])

            p9 = p[9]
            cp = [CPn[i] * (p9 ** i) * ((1 - p9) ** (i * 1 - i)) for i in range(16)]

            sc[1] = 1*s[1]*cp[1]
            sc[2] = 1*s[1]*cp[2] + 1*s[2]*cp[1]*cp[1]   
            sc[3] = 2*s[2]*cp[1]*cp[2] + 1*s[3]*cp[1]*cp[1]*cp[1] + 1*s[1]*cp[3]
            sc[4] = 3*s[3]*cp[1]*cp[1]*cp[2] + 2*s[2]*cp[1]*cp[3] + 1*s[4]*cp[1]*cp[1]*cp[1]*cp[1] + 1*s[2]*cp[2]*cp[2] + 1*s[1]*cp[4] 
            sc[5] = 3*s[3]*cp[1]*cp[1]*cp[3] + 2*s[2]*cp[1]*cp[4] + 3*s[3]*cp[1]*cp[2]*cp[2] + 1*s[1]*cp[5] + 2*s[2]*cp[2]*cp[3] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[2] + 1*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]    
            sc[6] = 1*s[3]*cp[2]*cp[2]*cp[2] + 1*s[2]*cp[3]*cp[3] + 6*s[4]*cp[1]*cp[1]*cp[2]*cp[2] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 6*s[3]*cp[1]*cp[2]*cp[3] + 2*s[2]*cp[1]*cp[5] + 1*s[1]*cp[6] + 2*s[2]*cp[2]*cp[4] + 1*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 3*s[3]*cp[1]*cp[1]*cp[4] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[3]
            sc[7] = 1*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 3*s[3]*cp[1]*cp[1]*cp[5] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[4] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 4*s[4]*cp[1]*cp[2]*cp[2]*cp[2] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[3] + 10*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 2*s[2]*cp[1]*cp[6] + 6*s[3]*cp[1]*cp[2]*cp[4] + 1*s[1]*cp[7] + 2*s[2]*cp[2]*cp[5] + 2*s[2]*cp[3]*cp[4] + 3*s[3]*cp[2]*cp[2]*cp[3] + 3*s[3]*cp[1]*cp[3]*cp[3]    
            sc[8] = 20*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3] + 3*s[3]*cp[2]*cp[3]*cp[3] + 3*s[3]*cp[1]*cp[1]*cp[6] + 3*s[3]*cp[2]*cp[2]*cp[4] + 15*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 1*s[4]*cp[2]*cp[2]*cp[2]*cp[2] + 1*s[2]*cp[4]*cp[4] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[5] + 2*s[2]*cp[2]*cp[6] + 6*s[4]*cp[1]*cp[1]*cp[3]*cp[3] + 1*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 1*s[1]*cp[8] + 7*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[4] + 10*s[5]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2] + 6*s[3]*cp[1]*cp[2]*cp[5] + 2*s[2]*cp[3]*cp[5] + 2*s[2]*cp[1]*cp[7] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 6*s[3]*cp[1]*cp[3]*cp[4] + 12*s[4]*cp[1]*cp[2]*cp[2]*cp[3]    
            sc[9] = 3*s[3]*cp[1]*cp[1]*cp[7] + 5*s[5]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2] + 3*s[3]*cp[1]*cp[4]*cp[4] + 1*s[1]*cp[9] + 12*s[4]*cp[1]*cp[1]*cp[3]*cp[4] + 3*s[3]*cp[2]*cp[2]*cp[5] + 20*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2] + 1*s[3]*cp[3]*cp[3]*cp[3] + 8*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[5] + 12*s[4]*cp[1]*cp[2]*cp[2]*cp[4] + 1*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3] + 12*s[4]*cp[1]*cp[2]*cp[3]*cp[3] + 2*s[2]*cp[3]*cp[6] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5] + 2*s[2]*cp[4]*cp[5] + 7*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[6] + 2*s[2]*cp[2]*cp[7] + 6*s[3]*cp[1]*cp[2]*cp[6] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4] + 21*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 6*s[3]*cp[1]*cp[3]*cp[5] + 2*s[2]*cp[1]*cp[8] + 10*s[5]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3] + 6*s[3]*cp[2]*cp[3]*cp[4] + 4*s[4]*cp[2]*cp[2]*cp[2]*cp[3]    
            sc[10] = 6*s[3]*cp[2]*cp[3]*cp[5] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[7] + 9*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 2*s[2]*cp[2]*cp[8] + 8*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 6*s[3]*cp[1]*cp[4]*cp[5] + 1*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3] + 1*s[5]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 15*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2] + 2*s[2]*cp[3]*cp[7] + 28*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[5] + 4*s[4]*cp[1]*cp[3]*cp[3]*cp[3] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3] + 1*s[2]*cp[5]*cp[5] + 3*s[3]*cp[1]*cp[1]*cp[8] + 7*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4] + 3*s[3]*cp[3]*cp[3]*cp[4] + 12*s[4]*cp[1]*cp[1]*cp[3]*cp[5] + 3*s[3]*cp[2]*cp[4]*cp[4] + 15*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4] + 6*s[4]*cp[2]*cp[2]*cp[3]*cp[3] + 20*s[5]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3] + 12*s[4]*cp[1]*cp[2]*cp[2]*cp[5] + 2*s[2]*cp[1]*cp[9] + 4*s[4]*cp[2]*cp[2]*cp[2]*cp[4] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5] + 2*s[2]*cp[4]*cp[6] + 35*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2] + 24*s[4]*cp[1]*cp[2]*cp[3]*cp[4] + 1*s[1]*cp[10] + 6*s[3]*cp[1]*cp[3]*cp[6] + 6*s[3]*cp[1]*cp[2]*cp[7] + 3*s[3]*cp[2]*cp[2]*cp[6] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4] + 6*s[4]*cp[1]*cp[1]*cp[4]*cp[4] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[6] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[6] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]    
            sc[11] = 2*s[2]*cp[4]*cp[7] + 21*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3] + 1*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 2*s[2]*cp[5]*cp[6] + 12*s[4]*cp[2]*cp[2]*cp[3]*cp[4] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4] + 6*s[3]*cp[1]*cp[2]*cp[8] + 10*s[5]*cp[1]*cp[1]*cp[3]*cp[3]*cp[3] + 1*s[1]*cp[11] + 20*s[5]*cp[1]*cp[2]*cp[2]*cp[2]*cp[4] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[3]*cp[4] + 8*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[2]*cp[5] + 3*s[3]*cp[1]*cp[1]*cp[9] + 60*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3] + 2*s[2]*cp[2]*cp[9] + 10*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[3]*cp[5] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[8] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4] + 3*s[3]*cp[3]*cp[3]*cp[5] + 6*s[3]*cp[2]*cp[3]*cp[6] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[7] + 6*s[3]*cp[2]*cp[4]*cp[5] + 2*s[2]*cp[1]*cp[10] + 24*s[4]*cp[1]*cp[2]*cp[3]*cp[5] + 12*s[4]*cp[1]*cp[1]*cp[3]*cp[6] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3] + 30*s[5]*cp[1]*cp[2]*cp[2]*cp[3]*cp[3] + 7*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5] + 12*s[4]*cp[1]*cp[3]*cp[3]*cp[4] + 5*s[5]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 36*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 12*s[4]*cp[1]*cp[1]*cp[4]*cp[5] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[7] + 12*s[4]*cp[1]*cp[2]*cp[4]*cp[4] + 6*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 3*s[3]*cp[1]*cp[5]*cp[5] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2] + 6*s[3]*cp[1]*cp[4]*cp[6] + 4*s[4]*cp[2]*cp[3]*cp[3]*cp[3] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[5] + 4*s[4]*cp[2]*cp[2]*cp[2]*cp[5] + 6*s[3]*cp[1]*cp[3]*cp[7] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[6] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3] + 9*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 2*s[2]*cp[3]*cp[8] + 3*s[3]*cp[3]*cp[4]*cp[4] + 3*s[3]*cp[2]*cp[2]*cp[7] + 10*s[5]*cp[1]*cp[1]*cp[1]*cp[4]*cp[4] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[6] + 12*s[4]*cp[1]*cp[2]*cp[2]*cp[6] + 35*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]
            sc[12] = 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4] + 6*s[3]*cp[1]*cp[4]*cp[7] + 12*s[4]*cp[1]*cp[3]*cp[4]*cp[4] + 3*s[3]*cp[2]*cp[5]*cp[5] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[5] + 168*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3] + 1*s[2]*cp[6]*cp[6] + 6*s[3]*cp[1]*cp[2]*cp[9] + 72*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3] + 60*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[4] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[7] + 21*s[7]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 6*s[3]*cp[2]*cp[3]*cp[7] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[5] + 60*s[5]*cp[1]*cp[2]*cp[2]*cp[3]*cp[4] + 3*s[3]*cp[3]*cp[3]*cp[6] + 20*s[6]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[3] + 10*s[5]*cp[2]*cp[2]*cp[2]*cp[3]*cp[3] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[5] + 1*s[3]*cp[4]*cp[4]*cp[4] + 1*s[4]*cp[3]*cp[3]*cp[3]*cp[3] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3] + 12*s[4]*cp[2]*cp[2]*cp[3]*cp[5] + 2*s[2]*cp[1]*cp[11] + 10*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 70*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[4]*cp[5] + 2*s[2]*cp[4]*cp[8] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[6] + 140*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3] + 4*s[4]*cp[2]*cp[2]*cp[2]*cp[6] + 28*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3] + 15*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[4] + 45*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 3*s[3]*cp[2]*cp[2]*cp[8] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4] + 1*s[6]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 12*s[4]*cp[1]*cp[1]*cp[4]*cp[6] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[8] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[4]*cp[4] + 12*s[4]*cp[1]*cp[2]*cp[2]*cp[7] + 6*s[3]*cp[2]*cp[4]*cp[6] + 9*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4] + 20*s[5]*cp[1]*cp[2]*cp[2]*cp[2]*cp[5] + 90*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[3] + 6*s[3]*cp[1]*cp[3]*cp[8] + 3*s[3]*cp[1]*cp[1]*cp[10] + 7*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[6] + 2*s[2]*cp[2]*cp[10] + 24*s[4]*cp[1]*cp[2]*cp[3]*cp[6] + 2*s[2]*cp[3]*cp[9] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[9] + 1*s[1]*cp[12] + 84*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2] + 12*s[4]*cp[2]*cp[3]*cp[3]*cp[4] + 6*s[4]*cp[2]*cp[2]*cp[4]*cp[4] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[7] + 1*s[12]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[3]*cp[6] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[2]*cp[6] + 8*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[3]*cp[5] + 12*s[4]*cp[1]*cp[1]*cp[3]*cp[7] + 20*s[5]*cp[1]*cp[2]*cp[3]*cp[3]*cp[3] + 2*s[2]*cp[5]*cp[7] + 5*s[5]*cp[2]*cp[2]*cp[2]*cp[2]*cp[4] + 6*s[3]*cp[1]*cp[5]*cp[6] + 12*s[4]*cp[1]*cp[3]*cp[3]*cp[5] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4] + 11*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 120*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[4] + 30*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 30*s[5]*cp[1]*cp[1]*cp[3]*cp[3]*cp[4] + 6*s[3]*cp[3]*cp[4]*cp[5] + 24*s[4]*cp[1]*cp[2]*cp[4]*cp[5] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[8] + 6*s[4]*cp[1]*cp[1]*cp[5]*cp[5]    
            sc[13] = 280*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3] + 6*s[3]*cp[1]*cp[2]*cp[10] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[9] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[3]*cp[7] + 2*s[2]*cp[5]*cp[8] + 3*s[3]*cp[2]*cp[2]*cp[9] + 2*s[2]*cp[6]*cp[7] + 20*s[5]*cp[1]*cp[2]*cp[2]*cp[2]*cp[6] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[9] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[5] + 30*s[5]*cp[1]*cp[2]*cp[2]*cp[4]*cp[4] + 72*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[5] + 36*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3] + 6*s[3]*cp[2]*cp[3]*cp[8] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[5] + 2*s[2]*cp[1]*cp[12] + 6*s[3]*cp[1]*cp[5]*cp[7] + 2*s[2]*cp[2]*cp[11] + 12*s[4]*cp[2]*cp[3]*cp[4]*cp[4] + 12*s[4]*cp[1]*cp[2]*cp[5]*cp[5] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[6] + 60*s[5]*cp[1]*cp[2]*cp[2]*cp[3]*cp[5] + 24*s[4]*cp[1]*cp[2]*cp[3]*cp[7] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[7] + 11*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 60*s[5]*cp[1]*cp[2]*cp[3]*cp[3]*cp[4] + 12*s[4]*cp[1]*cp[3]*cp[3]*cp[6] + 12*s[4]*cp[1]*cp[1]*cp[4]*cp[7] + 12*s[4]*cp[2]*cp[2]*cp[4]*cp[5] + 10*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4] + 60*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3]*cp[3] + 12*s[4]*cp[2]*cp[3]*cp[3]*cp[5] + 3*s[3]*cp[3]*cp[3]*cp[7] + 6*s[3]*cp[1]*cp[3]*cp[9] + 3*s[3]*cp[1]*cp[6]*cp[6] + 12*s[4]*cp[1]*cp[2]*cp[2]*cp[8] + 10*s[5]*cp[2]*cp[2]*cp[3]*cp[3]*cp[3] + 8*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[6] + 3*s[3]*cp[4]*cp[4]*cp[5] + 210*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[3] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[6] + 12*s[4]*cp[1]*cp[1]*cp[5]*cp[6] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[6] + 120*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[4]*cp[6] + 126*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2] + 5*s[5]*cp[2]*cp[2]*cp[2]*cp[2]*cp[5] + 210*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[4] + 4*s[4]*cp[2]*cp[2]*cp[2]*cp[7] + 140*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[4] + 9*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5] + 12*s[4]*cp[1]*cp[1]*cp[3]*cp[8] + 2*s[2]*cp[3]*cp[10] + 12*s[12]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 7*s[7]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[2]*cp[7] + 168*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3] + 5*s[5]*cp[1]*cp[3]*cp[3]*cp[3]*cp[3] + 6*s[6]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 6*s[3]*cp[2]*cp[5]*cp[6] + 60*s[6]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3]*cp[3] + 120*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[5] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[4] + 105*s[7]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 4*s[4]*cp[1]*cp[4]*cp[4]*cp[4] + 4*s[4]*cp[3]*cp[3]*cp[3]*cp[4] + 10*s[5]*cp[1]*cp[1]*cp[1]*cp[5]*cp[5] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[8] + 1*s[13]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[4]*cp[5] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[5] + 12*s[4]*cp[2]*cp[2]*cp[3]*cp[6] + 6*s[3]*cp[3]*cp[4]*cp[6] + 30*s[5]*cp[1]*cp[1]*cp[3]*cp[4]*cp[4] + 24*s[4]*cp[1]*cp[2]*cp[4]*cp[6] + 1*s[1]*cp[13] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4]*cp[4] + 24*s[4]*cp[1]*cp[3]*cp[4]*cp[5] + 30*s[5]*cp[1]*cp[1]*cp[3]*cp[3]*cp[5] + 168*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4] + 2*s[2]*cp[4]*cp[9] + 30*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[4] + 60*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[5] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[3]*cp[6] + 3*s[3]*cp[1]*cp[1]*cp[11] + 7*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[7] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[8] + 6*s[3]*cp[2]*cp[4]*cp[7] + 55*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 21*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[4] + 35*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[3] + 252*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3] + 90*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3] + 6*s[3]*cp[1]*cp[4]*cp[8] + 180*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[4] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[10] + 3*s[3]*cp[3]*cp[5]*cp[5] + 20*s[5]*cp[2]*cp[2]*cp[2]*cp[3]*cp[4] 
            sc[14] = 8*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[7] + 110*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[7] + 12*s[4]*cp[1]*cp[1]*cp[4]*cp[8] + 12*s[4]*cp[1]*cp[4]*cp[4]*cp[5] + 4*s[4]*cp[3]*cp[3]*cp[3]*cp[5] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[3]*cp[8] + 45*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3] + 420*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[4] + 12*s[4]*cp[2]*cp[2]*cp[3]*cp[7] + 24*s[4]*cp[1]*cp[2]*cp[4]*cp[7] + 90*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4]*cp[4] + 6*s[4]*cp[2]*cp[2]*cp[5]*cp[5] + 2*s[2]*cp[4]*cp[10] + 20*s[5]*cp[2]*cp[2]*cp[2]*cp[3]*cp[5] + 1*s[7]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 6*s[4]*cp[3]*cp[3]*cp[4]*cp[4] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[4] + 168*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[5] + 6*s[3]*cp[2]*cp[5]*cp[7] + 2*s[2]*cp[6]*cp[8] + 105*s[7]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[4] + 6*s[3]*cp[2]*cp[4]*cp[8] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[7] + 210*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2] + 72*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4] + 6*s[6]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[4] + 20*s[5]*cp[1]*cp[2]*cp[2]*cp[2]*cp[7] + 30*s[5]*cp[1]*cp[1]*cp[3]*cp[3]*cp[6] + 7*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[8] + 6*s[3]*cp[3]*cp[4]*cp[7] + 4*s[4]*cp[2]*cp[2]*cp[2]*cp[8] + 60*s[5]*cp[1]*cp[2]*cp[2]*cp[4]*cp[5] + 140*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3]*cp[3] + 2*s[2]*cp[2]*cp[12] + 15*s[6]*cp[1]*cp[1]*cp[3]*cp[3]*cp[3]*cp[3] + 210*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[5] + 66*s[12]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 12*s[4]*cp[1]*cp[3]*cp[5]*cp[5] + 24*s[4]*cp[2]*cp[3]*cp[4]*cp[5] + 15*s[6]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3]*cp[3] + 140*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[5] + 12*s[4]*cp[2]*cp[3]*cp[3]*cp[6] + 6*s[4]*cp[1]*cp[1]*cp[6]*cp[6] + 42*s[7]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4]*cp[4] + 1*s[2]*cp[7]*cp[7] + 4*s[4]*cp[2]*cp[4]*cp[4]*cp[4] + 10*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5] + 12*s[4]*cp[1]*cp[2]*cp[2]*cp[9] + 72*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[5] + 30*s[5]*cp[2]*cp[2]*cp[3]*cp[3]*cp[4] + 3*s[3]*cp[1]*cp[1]*cp[12] + 120*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3]*cp[4] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[5]*cp[5] + 28*s[8]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 28*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[4] + 9*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[6] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[6] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[7] + 60*s[5]*cp[1]*cp[2]*cp[3]*cp[3]*cp[5] + 60*s[6]*cp[1]*cp[2]*cp[2]*cp[3]*cp[3]*cp[3] + 24*s[4]*cp[1]*cp[2]*cp[5]*cp[6] + 10*s[5]*cp[1]*cp[1]*cp[4]*cp[4]*cp[4] + 336*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[4] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[6] + 24*s[4]*cp[1]*cp[3]*cp[4]*cp[6] + 6*s[3]*cp[1]*cp[4]*cp[9] + 6*s[3]*cp[3]*cp[5]*cp[6] + 1*s[14]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 20*s[5]*cp[1]*cp[3]*cp[3]*cp[3]*cp[4] + 13*s[13]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 180*s[6]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3]*cp[4] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[10] + 60*s[5]*cp[1]*cp[2]*cp[3]*cp[4]*cp[4] + 6*s[3]*cp[1]*cp[2]*cp[11] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[8] + 165*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[9] + 3*s[3]*cp[2]*cp[6]*cp[6] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[4]*cp[6] + 252*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[5] + 5*s[5]*cp[2]*cp[2]*cp[2]*cp[2]*cp[6] + 24*s[4]*cp[1]*cp[2]*cp[3]*cp[8] + 12*s[4]*cp[1]*cp[3]*cp[3]*cp[7] + 6*s[3]*cp[1]*cp[5]*cp[8] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[5] + 280*s[8]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 360*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3] + 2*s[2]*cp[3]*cp[11] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[4]*cp[7] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[5] + 11*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4]*cp[4] + 6*s[3]*cp[2]*cp[3]*cp[9] + 60*s[5]*cp[1]*cp[2]*cp[2]*cp[3]*cp[6] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[10] + 120*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[6] + 252*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[2]*cp[8] + 2*s[2]*cp[5]*cp[9] + 504*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3] + 120*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4]*cp[5] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[9] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[3] + 30*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[5] + 10*s[5]*cp[2]*cp[2]*cp[2]*cp[4]*cp[4] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[6] + 90*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4] + 280*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[4] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[11] + 3*s[3]*cp[2]*cp[2]*cp[10] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[5]*cp[6] + 210*s[7]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3]*cp[3] + 60*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[6] + 6*s[3]*cp[1]*cp[3]*cp[10] + 15*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5]*cp[5] + 420*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[3] + 12*s[12]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 2*s[2]*cp[1]*cp[13] + 60*s[5]*cp[1]*cp[1]*cp[3]*cp[4]*cp[5] + 12*s[4]*cp[1]*cp[1]*cp[3]*cp[9] + 3*s[3]*cp[3]*cp[3]*cp[8] + 5*s[5]*cp[2]*cp[3]*cp[3]*cp[3]*cp[3] + 3*s[3]*cp[4]*cp[5]*cp[5] + 6*s[3]*cp[1]*cp[6]*cp[7] + 180*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[5] + 126*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 1*s[1]*cp[14] + 3*s[3]*cp[4]*cp[4]*cp[6] + 12*s[4]*cp[1]*cp[1]*cp[5]*cp[7] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[3]*cp[7] + 12*s[4]*cp[2]*cp[2]*cp[4]*cp[6] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[6] 
            sc[15] = 20*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[10] + 2*s[2]*cp[6]*cp[9] + 12*s[4]*cp[1]*cp[1]*cp[6]*cp[7] + 168*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4]*cp[4] + 4*s[4]*cp[3]*cp[4]*cp[4]*cp[4] + 12*s[4]*cp[2]*cp[3]*cp[3]*cp[7] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[5]*cp[5] + 12*s[4]*cp[2]*cp[4]*cp[4]*cp[5] + 210*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[6] + 1*s[5]*cp[3]*cp[3]*cp[3]*cp[3]*cp[3] + 4*s[4]*cp[3]*cp[3]*cp[3]*cp[6] + 11*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5] + 12*s[4]*cp[1]*cp[2]*cp[2]*cp[10] + 1*s[1]*cp[15] + 6*s[3]*cp[2]*cp[6]*cp[7] + 90*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[5] + 12*s[4]*cp[1]*cp[2]*cp[6]*cp[6] + 1*s[3]*cp[5]*cp[5]*cp[5] + 10*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[6] + 30*s[5]*cp[1]*cp[1]*cp[3]*cp[3]*cp[7] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5]*cp[6] + 6*s[3]*cp[1]*cp[5]*cp[9] + 12*s[4]*cp[2]*cp[2]*cp[5]*cp[6] + 20*s[5]*cp[2]*cp[2]*cp[2]*cp[4]*cp[5] + 20*s[5]*cp[1]*cp[3]*cp[3]*cp[3]*cp[5] + 84*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[3] + 24*s[4]*cp[1]*cp[3]*cp[4]*cp[7] + 180*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4]*cp[5] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[12] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[8] + 60*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[4]*cp[4] + 30*s[5]*cp[1]*cp[3]*cp[3]*cp[4]*cp[4] + 55*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[7] + 2*s[2]*cp[3]*cp[12] + 756*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[3] + 840*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[4] + 6*s[3]*cp[2]*cp[3]*cp[10] + 20*s[6]*cp[1]*cp[1]*cp[1]*cp[4]*cp[4]*cp[4] + 30*s[5]*cp[1]*cp[1]*cp[3]*cp[5]*cp[5] + 140*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[6] + 12*s[4]*cp[1]*cp[4]*cp[5]*cp[5] + 220*s[12]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2] + 60*s[6]*cp[1]*cp[1]*cp[3]*cp[3]*cp[3]*cp[4] + 30*s[5]*cp[2]*cp[2]*cp[3]*cp[3]*cp[5] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[8] + 504*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[4] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[7] + 105*s[7]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3]*cp[3] + 12*s[12]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4] + 36*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[4] + 105*s[7]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[5] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[7] + 110*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4] + 24*s[4]*cp[1]*cp[2]*cp[3]*cp[9] + 6*s[3]*cp[1]*cp[6]*cp[8] + 30*s[5]*cp[1]*cp[1]*cp[4]*cp[4]*cp[5] + 3*s[3]*cp[2]*cp[2]*cp[11] + 24*s[4]*cp[1]*cp[3]*cp[5]*cp[6] + 60*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[7] + 3*s[3]*cp[3]*cp[6]*cp[6] + 6*s[3]*cp[1]*cp[2]*cp[12] + 6*s[3]*cp[1]*cp[3]*cp[11] + 12*s[4]*cp[1]*cp[4]*cp[4]*cp[6] + 20*s[5]*cp[1]*cp[2]*cp[2]*cp[2]*cp[8] + 120*s[5]*cp[1]*cp[2]*cp[3]*cp[4]*cp[5] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[11] + 90*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4] + 24*s[4]*cp[1]*cp[2]*cp[4]*cp[8] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[11] + 3*s[3]*cp[3]*cp[3]*cp[9] + 210*s[7]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[3]*cp[3] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[5] + 120*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4]*cp[6] + 42*s[7]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[4] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[6] + 3*s[3]*cp[4]*cp[4]*cp[7] + 6*s[3]*cp[4]*cp[5]*cp[6] + 252*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[5] + 2*s[2]*cp[4]*cp[11] + 120*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3]*cp[5] + 2*s[2]*cp[5]*cp[10] + 630*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 7*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[9] + 2*s[2]*cp[7]*cp[8] + 280*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[5] + 5*s[5]*cp[2]*cp[2]*cp[2]*cp[2]*cp[7] + 180*s[6]*cp[1]*cp[1]*cp[2]*cp[3]*cp[4]*cp[4] + 12*s[4]*cp[1]*cp[1]*cp[3]*cp[10] + 280*s[8]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[4] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4]*cp[4] + 12*s[4]*cp[1]*cp[1]*cp[5]*cp[8] + 132*s[12]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3] + 336*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[5] + 6*s[3]*cp[2]*cp[5]*cp[8] + 9*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[7] + 60*s[5]*cp[1]*cp[2]*cp[2]*cp[3]*cp[7] + 24*s[4]*cp[2]*cp[3]*cp[4]*cp[6] + 20*s[6]*cp[2]*cp[2]*cp[2]*cp[3]*cp[3]*cp[3] + 180*s[6]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3]*cp[5] + 24*s[4]*cp[1]*cp[2]*cp[5]*cp[7] + 60*s[5]*cp[1]*cp[2]*cp[3]*cp[3]*cp[6] + 2*s[2]*cp[1]*cp[14] + 280*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3]*cp[3] + 840*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3] + 2*s[2]*cp[2]*cp[13] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[2]*cp[9] + 3*s[3]*cp[1]*cp[7]*cp[7] + 21*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5]*cp[5] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[9] + 495*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3] + 420*s[7]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3]*cp[4] + 84*s[9]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 78*s[13]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 12*s[4]*cp[2]*cp[2]*cp[4]*cp[7] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[4]*cp[7] + 30*s[6]*cp[1]*cp[2]*cp[3]*cp[3]*cp[3]*cp[3] + 360*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4] + 6*s[3]*cp[2]*cp[4]*cp[9] + 12*s[4]*cp[1]*cp[1]*cp[4]*cp[9] + 168*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[4] + 168*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[6] + 210*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4]*cp[4] + 20*s[5]*cp[2]*cp[2]*cp[2]*cp[3]*cp[6] + 1*s[15]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 30*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[6] + 72*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[6] + 30*s[6]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3]*cp[4] + 13*s[13]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[8] + 12*s[4]*cp[2]*cp[3]*cp[5]*cp[5] + 8*s[8]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 12*s[4]*cp[2]*cp[2]*cp[3]*cp[8] + 360*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3] + 120*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[7] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[6] + 560*s[8]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3]*cp[3] + 20*s[5]*cp[1]*cp[2]*cp[4]*cp[4]*cp[4] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[4]*cp[8] + 330*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2] + 60*s[5]*cp[1]*cp[1]*cp[3]*cp[4]*cp[6] + 504*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[4] + 12*s[4]*cp[3]*cp[3]*cp[4]*cp[5] + 168*s[8]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[5] + 60*s[5]*cp[1]*cp[2]*cp[2]*cp[4]*cp[6] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[7] + 72*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[5] + 10*s[5]*cp[1]*cp[1]*cp[1]*cp[6]*cp[6] + 3*s[3]*cp[1]*cp[1]*cp[13] + 180*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[6] + 8*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[8] + 6*s[3]*cp[3]*cp[4]*cp[8] + 252*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 30*s[5]*cp[1]*cp[2]*cp[2]*cp[5]*cp[5] + 420*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[5] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[3]*cp[9] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[10] + 20*s[5]*cp[2]*cp[3]*cp[3]*cp[3]*cp[4] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[6] + 35*s[7]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[3]*cp[3] + 14*s[14]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 210*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4]*cp[5] + 6*s[3]*cp[1]*cp[4]*cp[10] + 30*s[5]*cp[2]*cp[2]*cp[3]*cp[4]*cp[4] + 4*s[4]*cp[2]*cp[2]*cp[2]*cp[9] + 120*s[6]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4]*cp[5] + 6*s[6]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[5] + 12*s[4]*cp[1]*cp[3]*cp[3]*cp[8] + 6*s[3]*cp[3]*cp[5]*cp[7] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[5]*cp[6] + 420*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3]*cp[4] + 7*s[7]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[3]*cp[8] + 180*s[6]*cp[1]*cp[2]*cp[2]*cp[3]*cp[3]*cp[4] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[5]*cp[7]

            funcs[0].SetParameters(p[0], 0.0, p[1])
            for i in range(1, nPeaks + 1):
                funcs[i].SetParameters(p[5], (i - 1) * p[7], p[8])
            funcs[16].SetParameters(p[3], 0.0, p[4])

            iBin = h.FindBin(x[0] - p[2])
            ll = h.GetBinLowEdge(iBin)
            ul = ll + h.GetBinWidth(iBin)

            g = funcs[0].Eval(x[0] - p[2])
            for i in range(1, nPeaks + 1):
                g += sc[i] * funcs[i].Eval(x[0] - p[2])
    
            g += funcs[nPeaks + 1].Eval(x[0] - p[2])
    
            return g

        def mip_func(x, p, h, func_mip):
            i_bin = h.FindBin(x[0])
            ll = h.GetBinLowEdge(i_bin)
            ul = ll + h.GetBinWidth(i_bin)

            func_mip.set_params(p[12], p[11], p[10], p[13])

            mip = func_mip.evaluate(x[0] - p[2])
    
            return mip

        def combined_func(x, p, h, func_mip, ppe_func, domip=True):
            return_val = ppe_func(x, p)

            if domip:
                return_val += mip_func(x, p, h, func_mip)

            return return_val

#end