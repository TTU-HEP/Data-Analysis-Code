import numpy as np
from scipy.special import factorial
from scipy.stats import norm, poisson, expon

class PPEFunc:
    def __init__(self, nPeak, domip):
        self.n = 4
        self.domip_ = domip
        self.nPeaks_ = nPeak
        self.nTotalPeaks_ = 15
        
        self.CPn = [0, 1]
        self.CPn.extend([
            self.n,
            (self.n * (-1 + 3 * self.n)) / 2.,
            (self.n * (1 - 6 * self.n + 8 * self.n ** 2)) / 3.,
            (self.n * (-3 + 5 * self.n) * (-2 + 5 * self.n) * (-1 + 5 * self.n)) / 24.,
            (self.n * (-1 + 2 * self.n) * (-2 + 3 * self.n) * (-1 + 3 * self.n) * (-1 + 6 * self.n)) / 10.,
            (self.n * (-5 + 7 * self.n) * (-4 + 7 * self.n) * (-3 + 7 * self.n) * (-2 + 7 * self.n) * (-1 + 7 * self.n)) / 720.,
            (self.n * (-1 + 2 * self.n) * (-3 + 4 * self.n) * (-1 + 4 * self.n) * (-5 + 8 * self.n) * (-3 + 8 * self.n) * (-1 + 8 * self.n)) / 315.,
            (self.n * (-2 + 3 * self.n) * (-1 + 3 * self.n) * (-7 + 9 * self.n) * (-5 + 9 * self.n) * (-4 + 9 * self.n) * (-2 + 9 * self.n) * (-1 + 9 * self.n)) / 4480.,
            (self.n * (-1 + 2 * self.n) * (-4 + 5 * self.n) * (-3 + 5 * self.n) * (-2 + 5 * self.n) * (-1 + 5 * self.n) * (-7 + 10 * self.n) * (-3 + 10 * self.n) * (-1 + 10 * self.n)) / 4536.,
            (self.n * (-9 + 11 * self.n) * (-8 + 11 * self.n) * (-7 + 11 * self.n) * (-6 + 11 * self.n) * (-5 + 11 * self.n) * (-4 + 11 * self.n) * (-3 + 11 * self.n) * (-2 + 11 * self.n) * (-1 + 11 * self.n)) / 3.6288e6,
            (self.n * (-1 + 2 * self.n) * (-2 + 3 * self.n) * (-1 + 3 * self.n) * (-3 + 4 * self.n) * (-1 + 4 * self.n) * (-5 + 6 * self.n) * (-1 + 6 * self.n) * (-7 + 12 * self.n) * (-5 + 12 * self.n) * (-1 + 12 * self.n)) / 11550.,
            (self.n * (-11 + 13 * self.n) * (-10 + 13 * self.n) * (-9 + 13 * self.n) * (-8 + 13 * self.n) * (-7 + 13 * self.n) * (-6 + 13 * self.n) * (-5 + 13 * self.n) * (-4 + 13 * self.n) * (-3 + 13 * self.n) * (-2 + 13 * self.n) * (-1 + 13 * self.n)) / 4.790016e8,
            (self.n * (-1 + 2 * self.n) * (-6 + 7 * self.n) * (-5 + 7 * self.n) * (-4 + 7 * self.n) * (-3 + 7 * self.n) * (-2 + 7 * self.n) * (-1 + 7 * self.n) * (-11 + 14 * self.n) * (-9 + 14 * self.n) * (-5 + 14 * self.n) * (-3 + 14 * self.n) * (-1 + 14 * self.n)) / 1.38996e7,
            (self.n ** 2 * (19802759040 + self.n * (-425547472896 + self.n * (4895614496136 + self.n * (-36007056781696 + self.n * (180954419071426 + self.n * (-643524004371248 + self.n * (1648017660281993 + self.n * (-3051606955645248 + self.n * (4048835387589993 + self.n * (-3751975766595056 + self.n * (2305159936523171 + self.n * (-843351196289056 + 139013933454241 * self.n)))))))))))) / 6.2270208e9)
        ])
        
        self.funcs = []
        self.funcs.append(lambda x, *p: norm.pdf(x, loc=p[2], scale=p[1]))  # pedestal
        for i in range(1, self.nTotalPeaks_ + 1):
            self.funcs.append(lambda x, *p, i=i: norm.pdf(x, loc=(i-1)*p[7], scale=p[8]))  # PE peaks
        self.funcs.append(lambda x, *p: expon.pdf(x, loc=p[2], scale=p[4]))  # background

    def ppe_func(self, x, p):
        s = np.array([poisson.pmf(i, p[6]) for i in range(self.nTotalPeaks_ + 1)])
        cp = [self.CPn[i] * (p[9] ** i) * ((1 - p[9]) ** (i * self.n - i)) for i in range(16)]
        
        # Compute sc as convolution (not implemented)
        sc = np.zeros(self.nTotalPeaks_ + 1)  # Placeholder for actual convolution result

        sc[1] = 1*s[1]*cp[1];
        sc[2] = 1*s[1]*cp[2] + 1*s[2]*cp[1]*cp[1];    
        sc[3] = 2*s[2]*cp[1]*cp[2] + 1*s[3]*cp[1]*cp[1]*cp[1] + 1*s[1]*cp[3];    
        sc[4] = 3*s[3]*cp[1]*cp[1]*cp[2] + 2*s[2]*cp[1]*cp[3] + 1*s[4]*cp[1]*cp[1]*cp[1]*cp[1] + 1*s[2]*cp[2]*cp[2] + 1*s[1]*cp[4];    
        sc[5] = 3*s[3]*cp[1]*cp[1]*cp[3] + 2*s[2]*cp[1]*cp[4] + 3*s[3]*cp[1]*cp[2]*cp[2] + 1*s[1]*cp[5] + 2*s[2]*cp[2]*cp[3] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[2] + 1*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1];    
        sc[6] = 1*s[3]*cp[2]*cp[2]*cp[2] + 1*s[2]*cp[3]*cp[3] + 6*s[4]*cp[1]*cp[1]*cp[2]*cp[2] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 6*s[3]*cp[1]*cp[2]*cp[3] + 2*s[2]*cp[1]*cp[5] + 1*s[1]*cp[6] + 2*s[2]*cp[2]*cp[4] + 1*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 3*s[3]*cp[1]*cp[1]*cp[4] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[3];
        sc[7] = 1*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 3*s[3]*cp[1]*cp[1]*cp[5] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[4] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 4*s[4]*cp[1]*cp[2]*cp[2]*cp[2] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[3] + 10*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 2*s[2]*cp[1]*cp[6] + 6*s[3]*cp[1]*cp[2]*cp[4] + 1*s[1]*cp[7] + 2*s[2]*cp[2]*cp[5] + 2*s[2]*cp[3]*cp[4] + 3*s[3]*cp[2]*cp[2]*cp[3] + 3*s[3]*cp[1]*cp[3]*cp[3];    
        sc[8] = 20*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3] + 3*s[3]*cp[2]*cp[3]*cp[3] + 3*s[3]*cp[1]*cp[1]*cp[6] + 3*s[3]*cp[2]*cp[2]*cp[4] + 15*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 1*s[4]*cp[2]*cp[2]*cp[2]*cp[2] + 1*s[2]*cp[4]*cp[4] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[5] + 2*s[2]*cp[2]*cp[6] + 6*s[4]*cp[1]*cp[1]*cp[3]*cp[3] + 1*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 1*s[1]*cp[8] + 7*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[4] + 10*s[5]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2] + 6*s[3]*cp[1]*cp[2]*cp[5] + 2*s[2]*cp[3]*cp[5] + 2*s[2]*cp[1]*cp[7] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 6*s[3]*cp[1]*cp[3]*cp[4] + 12*s[4]*cp[1]*cp[2]*cp[2]*cp[3];    
        sc[9] = 3*s[3]*cp[1]*cp[1]*cp[7] + 5*s[5]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2] + 3*s[3]*cp[1]*cp[4]*cp[4] + 1*s[1]*cp[9] + 12*s[4]*cp[1]*cp[1]*cp[3]*cp[4] + 3*s[3]*cp[2]*cp[2]*cp[5] + 20*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2] + 1*s[3]*cp[3]*cp[3]*cp[3] + 8*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[5] + 12*s[4]*cp[1]*cp[2]*cp[2]*cp[4] + 1*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3] + 12*s[4]*cp[1]*cp[2]*cp[3]*cp[3] + 2*s[2]*cp[3]*cp[6] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5] + 2*s[2]*cp[4]*cp[5] + 7*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[6] + 2*s[2]*cp[2]*cp[7] + 6*s[3]*cp[1]*cp[2]*cp[6] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4] + 21*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 6*s[3]*cp[1]*cp[3]*cp[5] + 2*s[2]*cp[1]*cp[8] + 10*s[5]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3] + 6*s[3]*cp[2]*cp[3]*cp[4] + 4*s[4]*cp[2]*cp[2]*cp[2]*cp[3];    
        sc[10] = 6*s[3]*cp[2]*cp[3]*cp[5] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[7] + 9*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 2*s[2]*cp[2]*cp[8] + 8*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 6*s[3]*cp[1]*cp[4]*cp[5] + 1*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3] + 1*s[5]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 15*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2] + 2*s[2]*cp[3]*cp[7] + 28*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[5] + 4*s[4]*cp[1]*cp[3]*cp[3]*cp[3] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3] + 1*s[2]*cp[5]*cp[5] + 3*s[3]*cp[1]*cp[1]*cp[8] + 7*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4] + 3*s[3]*cp[3]*cp[3]*cp[4] + 12*s[4]*cp[1]*cp[1]*cp[3]*cp[5] + 3*s[3]*cp[2]*cp[4]*cp[4] + 15*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4] + 6*s[4]*cp[2]*cp[2]*cp[3]*cp[3] + 20*s[5]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3] + 12*s[4]*cp[1]*cp[2]*cp[2]*cp[5] + 2*s[2]*cp[1]*cp[9] + 4*s[4]*cp[2]*cp[2]*cp[2]*cp[4] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5] + 2*s[2]*cp[4]*cp[6] + 35*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2] + 24*s[4]*cp[1]*cp[2]*cp[3]*cp[4] + 1*s[1]*cp[10] + 6*s[3]*cp[1]*cp[3]*cp[6] + 6*s[3]*cp[1]*cp[2]*cp[7] + 3*s[3]*cp[2]*cp[2]*cp[6] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4] + 6*s[4]*cp[1]*cp[1]*cp[4]*cp[4] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[6] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[6] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3];    
        sc[11] = 2*s[2]*cp[4]*cp[7] + 21*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3] + 1*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 2*s[2]*cp[5]*cp[6] + 12*s[4]*cp[2]*cp[2]*cp[3]*cp[4] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4] + 6*s[3]*cp[1]*cp[2]*cp[8] + 10*s[5]*cp[1]*cp[1]*cp[3]*cp[3]*cp[3] + 1*s[1]*cp[11] + 20*s[5]*cp[1]*cp[2]*cp[2]*cp[2]*cp[4] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[3]*cp[4] + 8*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[2]*cp[5] + 3*s[3]*cp[1]*cp[1]*cp[9] + 60*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3] + 2*s[2]*cp[2]*cp[9] + 10*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[3]*cp[5] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[8] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4] + 3*s[3]*cp[3]*cp[3]*cp[5] + 6*s[3]*cp[2]*cp[3]*cp[6] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[7] + 6*s[3]*cp[2]*cp[4]*cp[5] + 2*s[2]*cp[1]*cp[10] + 24*s[4]*cp[1]*cp[2]*cp[3]*cp[5] + 12*s[4]*cp[1]*cp[1]*cp[3]*cp[6] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3] + 30*s[5]*cp[1]*cp[2]*cp[2]*cp[3]*cp[3] + 7*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5] + 12*s[4]*cp[1]*cp[3]*cp[3]*cp[4] + 5*s[5]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 36*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 12*s[4]*cp[1]*cp[1]*cp[4]*cp[5] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[7] + 12*s[4]*cp[1]*cp[2]*cp[4]*cp[4] + 6*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 3*s[3]*cp[1]*cp[5]*cp[5] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2] + 6*s[3]*cp[1]*cp[4]*cp[6] + 4*s[4]*cp[2]*cp[3]*cp[3]*cp[3] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[5] + 4*s[4]*cp[2]*cp[2]*cp[2]*cp[5] + 6*s[3]*cp[1]*cp[3]*cp[7] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[6] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3] + 9*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 2*s[2]*cp[3]*cp[8] + 3*s[3]*cp[3]*cp[4]*cp[4] + 3*s[3]*cp[2]*cp[2]*cp[7] + 10*s[5]*cp[1]*cp[1]*cp[1]*cp[4]*cp[4] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[6] + 12*s[4]*cp[1]*cp[2]*cp[2]*cp[6] + 35*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2];
        sc[12] = 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4] + 6*s[3]*cp[1]*cp[4]*cp[7] + 12*s[4]*cp[1]*cp[3]*cp[4]*cp[4] + 3*s[3]*cp[2]*cp[5]*cp[5] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[5] + 168*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3] + 1*s[2]*cp[6]*cp[6] + 6*s[3]*cp[1]*cp[2]*cp[9] + 72*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3] + 60*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[4] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[7] + 21*s[7]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 6*s[3]*cp[2]*cp[3]*cp[7] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[5] + 60*s[5]*cp[1]*cp[2]*cp[2]*cp[3]*cp[4] + 3*s[3]*cp[3]*cp[3]*cp[6] + 20*s[6]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[3] + 10*s[5]*cp[2]*cp[2]*cp[2]*cp[3]*cp[3] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[5] + 1*s[3]*cp[4]*cp[4]*cp[4] + 1*s[4]*cp[3]*cp[3]*cp[3]*cp[3] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3] + 12*s[4]*cp[2]*cp[2]*cp[3]*cp[5] + 2*s[2]*cp[1]*cp[11] + 10*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 70*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[4]*cp[5] + 2*s[2]*cp[4]*cp[8] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[6] + 140*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3] + 4*s[4]*cp[2]*cp[2]*cp[2]*cp[6] + 28*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3] + 15*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[4] + 45*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 3*s[3]*cp[2]*cp[2]*cp[8] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4] + 1*s[6]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 12*s[4]*cp[1]*cp[1]*cp[4]*cp[6] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[8] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[4]*cp[4] + 12*s[4]*cp[1]*cp[2]*cp[2]*cp[7] + 6*s[3]*cp[2]*cp[4]*cp[6] + 9*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4] + 20*s[5]*cp[1]*cp[2]*cp[2]*cp[2]*cp[5] + 90*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[3] + 6*s[3]*cp[1]*cp[3]*cp[8] + 3*s[3]*cp[1]*cp[1]*cp[10] + 7*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[6] + 2*s[2]*cp[2]*cp[10] + 24*s[4]*cp[1]*cp[2]*cp[3]*cp[6] + 2*s[2]*cp[3]*cp[9] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[9] + 1*s[1]*cp[12] + 84*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2] + 12*s[4]*cp[2]*cp[3]*cp[3]*cp[4] + 6*s[4]*cp[2]*cp[2]*cp[4]*cp[4] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[7] + 1*s[12]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[3]*cp[6] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[2]*cp[6] + 8*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[3]*cp[5] + 12*s[4]*cp[1]*cp[1]*cp[3]*cp[7] + 20*s[5]*cp[1]*cp[2]*cp[3]*cp[3]*cp[3] + 2*s[2]*cp[5]*cp[7] + 5*s[5]*cp[2]*cp[2]*cp[2]*cp[2]*cp[4] + 6*s[3]*cp[1]*cp[5]*cp[6] + 12*s[4]*cp[1]*cp[3]*cp[3]*cp[5] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4] + 11*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 120*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[4] + 30*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 30*s[5]*cp[1]*cp[1]*cp[3]*cp[3]*cp[4] + 6*s[3]*cp[3]*cp[4]*cp[5] + 24*s[4]*cp[1]*cp[2]*cp[4]*cp[5] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[8] + 6*s[4]*cp[1]*cp[1]*cp[5]*cp[5];    
        sc[13] = 280*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3] + 6*s[3]*cp[1]*cp[2]*cp[10] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[9] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[3]*cp[7] + 2*s[2]*cp[5]*cp[8] + 3*s[3]*cp[2]*cp[2]*cp[9] + 2*s[2]*cp[6]*cp[7] + 20*s[5]*cp[1]*cp[2]*cp[2]*cp[2]*cp[6] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[9] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[5] + 30*s[5]*cp[1]*cp[2]*cp[2]*cp[4]*cp[4] + 72*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[5] + 36*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3] + 6*s[3]*cp[2]*cp[3]*cp[8] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[5] + 2*s[2]*cp[1]*cp[12] + 6*s[3]*cp[1]*cp[5]*cp[7] + 2*s[2]*cp[2]*cp[11] + 12*s[4]*cp[2]*cp[3]*cp[4]*cp[4] + 12*s[4]*cp[1]*cp[2]*cp[5]*cp[5] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[6] + 60*s[5]*cp[1]*cp[2]*cp[2]*cp[3]*cp[5] + 24*s[4]*cp[1]*cp[2]*cp[3]*cp[7] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[7] + 11*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 60*s[5]*cp[1]*cp[2]*cp[3]*cp[3]*cp[4] + 12*s[4]*cp[1]*cp[3]*cp[3]*cp[6] + 12*s[4]*cp[1]*cp[1]*cp[4]*cp[7] + 12*s[4]*cp[2]*cp[2]*cp[4]*cp[5] + 10*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4] + 60*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3]*cp[3] + 12*s[4]*cp[2]*cp[3]*cp[3]*cp[5] + 3*s[3]*cp[3]*cp[3]*cp[7] + 6*s[3]*cp[1]*cp[3]*cp[9] + 3*s[3]*cp[1]*cp[6]*cp[6] + 12*s[4]*cp[1]*cp[2]*cp[2]*cp[8] + 10*s[5]*cp[2]*cp[2]*cp[3]*cp[3]*cp[3] + 8*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[6] + 3*s[3]*cp[4]*cp[4]*cp[5] + 210*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[3] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[6] + 12*s[4]*cp[1]*cp[1]*cp[5]*cp[6] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[6] + 120*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[4]*cp[6] + 126*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2] + 5*s[5]*cp[2]*cp[2]*cp[2]*cp[2]*cp[5] + 210*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[4] + 4*s[4]*cp[2]*cp[2]*cp[2]*cp[7] + 140*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[4] + 9*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5] + 12*s[4]*cp[1]*cp[1]*cp[3]*cp[8] + 2*s[2]*cp[3]*cp[10] + 12*s[12]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 7*s[7]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[2]*cp[7] + 168*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3] + 5*s[5]*cp[1]*cp[3]*cp[3]*cp[3]*cp[3] + 6*s[6]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 6*s[3]*cp[2]*cp[5]*cp[6] + 60*s[6]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3]*cp[3] + 120*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[5] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[4] + 105*s[7]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 4*s[4]*cp[1]*cp[4]*cp[4]*cp[4] + 4*s[4]*cp[3]*cp[3]*cp[3]*cp[4] + 10*s[5]*cp[1]*cp[1]*cp[1]*cp[5]*cp[5] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[8] + 1*s[13]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[4]*cp[5] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[5] + 12*s[4]*cp[2]*cp[2]*cp[3]*cp[6] + 6*s[3]*cp[3]*cp[4]*cp[6] + 30*s[5]*cp[1]*cp[1]*cp[3]*cp[4]*cp[4] + 24*s[4]*cp[1]*cp[2]*cp[4]*cp[6] + 1*s[1]*cp[13] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4]*cp[4] + 24*s[4]*cp[1]*cp[3]*cp[4]*cp[5] + 30*s[5]*cp[1]*cp[1]*cp[3]*cp[3]*cp[5] + 168*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4] + 2*s[2]*cp[4]*cp[9] + 30*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[4] + 60*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[5] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[3]*cp[6] + 3*s[3]*cp[1]*cp[1]*cp[11] + 7*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[7] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[8] + 6*s[3]*cp[2]*cp[4]*cp[7] + 55*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 21*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[4] + 35*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[3] + 252*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3] + 90*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3] + 6*s[3]*cp[1]*cp[4]*cp[8] + 180*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[4] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[10] + 3*s[3]*cp[3]*cp[5]*cp[5] + 20*s[5]*cp[2]*cp[2]*cp[2]*cp[3]*cp[4];
        sc[14] = 8*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[7] + 110*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[7] + 12*s[4]*cp[1]*cp[1]*cp[4]*cp[8] + 12*s[4]*cp[1]*cp[4]*cp[4]*cp[5] + 4*s[4]*cp[3]*cp[3]*cp[3]*cp[5] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[3]*cp[8] + 45*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3] + 420*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[4] + 12*s[4]*cp[2]*cp[2]*cp[3]*cp[7] + 24*s[4]*cp[1]*cp[2]*cp[4]*cp[7] + 90*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4]*cp[4] + 6*s[4]*cp[2]*cp[2]*cp[5]*cp[5] + 2*s[2]*cp[4]*cp[10] + 20*s[5]*cp[2]*cp[2]*cp[2]*cp[3]*cp[5] + 1*s[7]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 6*s[4]*cp[3]*cp[3]*cp[4]*cp[4] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[4] + 168*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[5] + 6*s[3]*cp[2]*cp[5]*cp[7] + 2*s[2]*cp[6]*cp[8] + 105*s[7]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[4] + 6*s[3]*cp[2]*cp[4]*cp[8] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[7] + 210*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2] + 72*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4] + 6*s[6]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[4] + 20*s[5]*cp[1]*cp[2]*cp[2]*cp[2]*cp[7] + 30*s[5]*cp[1]*cp[1]*cp[3]*cp[3]*cp[6] + 7*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[8] + 6*s[3]*cp[3]*cp[4]*cp[7] + 4*s[4]*cp[2]*cp[2]*cp[2]*cp[8] + 60*s[5]*cp[1]*cp[2]*cp[2]*cp[4]*cp[5] + 140*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3]*cp[3] + 2*s[2]*cp[2]*cp[12] + 15*s[6]*cp[1]*cp[1]*cp[3]*cp[3]*cp[3]*cp[3] + 210*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[5] + 66*s[12]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 12*s[4]*cp[1]*cp[3]*cp[5]*cp[5] + 24*s[4]*cp[2]*cp[3]*cp[4]*cp[5] + 15*s[6]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3]*cp[3] + 140*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[5] + 12*s[4]*cp[2]*cp[3]*cp[3]*cp[6] + 6*s[4]*cp[1]*cp[1]*cp[6]*cp[6] + 42*s[7]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4]*cp[4] + 1*s[2]*cp[7]*cp[7] + 4*s[4]*cp[2]*cp[4]*cp[4]*cp[4] + 10*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5] + 12*s[4]*cp[1]*cp[2]*cp[2]*cp[9] + 72*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[5] + 30*s[5]*cp[2]*cp[2]*cp[3]*cp[3]*cp[4] + 3*s[3]*cp[1]*cp[1]*cp[12] + 120*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3]*cp[4] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[5]*cp[5] + 28*s[8]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 28*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[4] + 9*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[6] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[6] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[7] + 60*s[5]*cp[1]*cp[2]*cp[3]*cp[3]*cp[5] + 60*s[6]*cp[1]*cp[2]*cp[2]*cp[3]*cp[3]*cp[3] + 24*s[4]*cp[1]*cp[2]*cp[5]*cp[6] + 10*s[5]*cp[1]*cp[1]*cp[4]*cp[4]*cp[4] + 336*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[4] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[6] + 24*s[4]*cp[1]*cp[3]*cp[4]*cp[6] + 6*s[3]*cp[1]*cp[4]*cp[9] + 6*s[3]*cp[3]*cp[5]*cp[6] + 1*s[14]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 20*s[5]*cp[1]*cp[3]*cp[3]*cp[3]*cp[4] + 13*s[13]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 180*s[6]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3]*cp[4] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[10] + 60*s[5]*cp[1]*cp[2]*cp[3]*cp[4]*cp[4] + 6*s[3]*cp[1]*cp[2]*cp[11] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[8] + 165*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[9] + 3*s[3]*cp[2]*cp[6]*cp[6] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[4]*cp[6] + 252*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[5] + 5*s[5]*cp[2]*cp[2]*cp[2]*cp[2]*cp[6] + 24*s[4]*cp[1]*cp[2]*cp[3]*cp[8] + 12*s[4]*cp[1]*cp[3]*cp[3]*cp[7] + 6*s[3]*cp[1]*cp[5]*cp[8] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[5] + 280*s[8]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 360*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3] + 2*s[2]*cp[3]*cp[11] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[4]*cp[7] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[5] + 11*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4]*cp[4] + 6*s[3]*cp[2]*cp[3]*cp[9] + 60*s[5]*cp[1]*cp[2]*cp[2]*cp[3]*cp[6] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[10] + 120*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[6] + 252*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[2]*cp[8] + 2*s[2]*cp[5]*cp[9] + 504*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3] + 120*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4]*cp[5] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[9] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[3] + 30*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[5] + 10*s[5]*cp[2]*cp[2]*cp[2]*cp[4]*cp[4] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[6] + 90*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4] + 280*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[4] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[11] + 3*s[3]*cp[2]*cp[2]*cp[10] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[5]*cp[6] + 210*s[7]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3]*cp[3] + 60*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[6] + 6*s[3]*cp[1]*cp[3]*cp[10] + 15*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5]*cp[5] + 420*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[3] + 12*s[12]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 2*s[2]*cp[1]*cp[13] + 60*s[5]*cp[1]*cp[1]*cp[3]*cp[4]*cp[5] + 12*s[4]*cp[1]*cp[1]*cp[3]*cp[9] + 3*s[3]*cp[3]*cp[3]*cp[8] + 5*s[5]*cp[2]*cp[3]*cp[3]*cp[3]*cp[3] + 3*s[3]*cp[4]*cp[5]*cp[5] + 6*s[3]*cp[1]*cp[6]*cp[7] + 180*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[5] + 126*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 1*s[1]*cp[14] + 3*s[3]*cp[4]*cp[4]*cp[6] + 12*s[4]*cp[1]*cp[1]*cp[5]*cp[7] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[3]*cp[7] + 12*s[4]*cp[2]*cp[2]*cp[4]*cp[6] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[6];
        sc[15] = 20*s[5]*cp[1]*cp[1]*cp[1]*cp[2]*cp[10] + 2*s[2]*cp[6]*cp[9] + 12*s[4]*cp[1]*cp[1]*cp[6]*cp[7] + 168*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4]*cp[4] + 4*s[4]*cp[3]*cp[4]*cp[4]*cp[4] + 12*s[4]*cp[2]*cp[3]*cp[3]*cp[7] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[5]*cp[5] + 12*s[4]*cp[2]*cp[4]*cp[4]*cp[5] + 210*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[6] + 1*s[5]*cp[3]*cp[3]*cp[3]*cp[3]*cp[3] + 4*s[4]*cp[3]*cp[3]*cp[3]*cp[6] + 11*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5] + 12*s[4]*cp[1]*cp[2]*cp[2]*cp[10] + 1*s[1]*cp[15] + 6*s[3]*cp[2]*cp[6]*cp[7] + 90*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[5] + 12*s[4]*cp[1]*cp[2]*cp[6]*cp[6] + 1*s[3]*cp[5]*cp[5]*cp[5] + 10*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[6] + 30*s[5]*cp[1]*cp[1]*cp[3]*cp[3]*cp[7] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5]*cp[6] + 6*s[3]*cp[1]*cp[5]*cp[9] + 12*s[4]*cp[2]*cp[2]*cp[5]*cp[6] + 20*s[5]*cp[2]*cp[2]*cp[2]*cp[4]*cp[5] + 20*s[5]*cp[1]*cp[3]*cp[3]*cp[3]*cp[5] + 84*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[3] + 24*s[4]*cp[1]*cp[3]*cp[4]*cp[7] + 180*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4]*cp[5] + 4*s[4]*cp[1]*cp[1]*cp[1]*cp[12] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[8] + 60*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[4]*cp[4] + 30*s[5]*cp[1]*cp[3]*cp[3]*cp[4]*cp[4] + 55*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[7] + 2*s[2]*cp[3]*cp[12] + 756*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[3] + 840*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[4] + 6*s[3]*cp[2]*cp[3]*cp[10] + 20*s[6]*cp[1]*cp[1]*cp[1]*cp[4]*cp[4]*cp[4] + 30*s[5]*cp[1]*cp[1]*cp[3]*cp[5]*cp[5] + 140*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[6] + 12*s[4]*cp[1]*cp[4]*cp[5]*cp[5] + 220*s[12]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2] + 60*s[6]*cp[1]*cp[1]*cp[3]*cp[3]*cp[3]*cp[4] + 30*s[5]*cp[2]*cp[2]*cp[3]*cp[3]*cp[5] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[8] + 504*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[4] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[7] + 105*s[7]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3]*cp[3] + 12*s[12]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4] + 36*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[4] + 105*s[7]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[5] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[7] + 110*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4] + 24*s[4]*cp[1]*cp[2]*cp[3]*cp[9] + 6*s[3]*cp[1]*cp[6]*cp[8] + 30*s[5]*cp[1]*cp[1]*cp[4]*cp[4]*cp[5] + 3*s[3]*cp[2]*cp[2]*cp[11] + 24*s[4]*cp[1]*cp[3]*cp[5]*cp[6] + 60*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[7] + 3*s[3]*cp[3]*cp[6]*cp[6] + 6*s[3]*cp[1]*cp[2]*cp[12] + 6*s[3]*cp[1]*cp[3]*cp[11] + 12*s[4]*cp[1]*cp[4]*cp[4]*cp[6] + 20*s[5]*cp[1]*cp[2]*cp[2]*cp[2]*cp[8] + 120*s[5]*cp[1]*cp[2]*cp[3]*cp[4]*cp[5] + 12*s[4]*cp[1]*cp[1]*cp[2]*cp[11] + 90*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4] + 24*s[4]*cp[1]*cp[2]*cp[4]*cp[8] + 5*s[5]*cp[1]*cp[1]*cp[1]*cp[1]*cp[11] + 3*s[3]*cp[3]*cp[3]*cp[9] + 210*s[7]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[3]*cp[3] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[5] + 120*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4]*cp[6] + 42*s[7]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[4] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[6] + 3*s[3]*cp[4]*cp[4]*cp[7] + 6*s[3]*cp[4]*cp[5]*cp[6] + 252*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[5] + 2*s[2]*cp[4]*cp[11] + 120*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3]*cp[5] + 2*s[2]*cp[5]*cp[10] + 630*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 7*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[9] + 2*s[2]*cp[7]*cp[8] + 280*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[5] + 5*s[5]*cp[2]*cp[2]*cp[2]*cp[2]*cp[7] + 180*s[6]*cp[1]*cp[1]*cp[2]*cp[3]*cp[4]*cp[4] + 12*s[4]*cp[1]*cp[1]*cp[3]*cp[10] + 280*s[8]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[4] + 105*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4]*cp[4] + 12*s[4]*cp[1]*cp[1]*cp[5]*cp[8] + 132*s[12]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3] + 336*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[5] + 6*s[3]*cp[2]*cp[5]*cp[8] + 9*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[7] + 60*s[5]*cp[1]*cp[2]*cp[2]*cp[3]*cp[7] + 24*s[4]*cp[2]*cp[3]*cp[4]*cp[6] + 20*s[6]*cp[2]*cp[2]*cp[2]*cp[3]*cp[3]*cp[3] + 180*s[6]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3]*cp[5] + 24*s[4]*cp[1]*cp[2]*cp[5]*cp[7] + 60*s[5]*cp[1]*cp[2]*cp[3]*cp[3]*cp[6] + 2*s[2]*cp[1]*cp[14] + 280*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3]*cp[3] + 840*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3] + 2*s[2]*cp[2]*cp[13] + 30*s[5]*cp[1]*cp[1]*cp[2]*cp[2]*cp[9] + 3*s[3]*cp[1]*cp[7]*cp[7] + 21*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[5]*cp[5] + 30*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[9] + 495*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3] + 420*s[7]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3]*cp[4] + 84*s[9]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 78*s[13]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2] + 12*s[4]*cp[2]*cp[2]*cp[4]*cp[7] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[4]*cp[7] + 30*s[6]*cp[1]*cp[2]*cp[3]*cp[3]*cp[3]*cp[3] + 360*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4] + 6*s[3]*cp[2]*cp[4]*cp[9] + 12*s[4]*cp[1]*cp[1]*cp[4]*cp[9] + 168*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[4] + 168*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[6] + 210*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[4]*cp[4] + 20*s[5]*cp[2]*cp[2]*cp[2]*cp[3]*cp[6] + 1*s[15]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1] + 30*s[6]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[6] + 72*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[6] + 30*s[6]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3]*cp[4] + 13*s[13]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3] + 42*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[8] + 12*s[4]*cp[2]*cp[3]*cp[5]*cp[5] + 8*s[8]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 12*s[4]*cp[2]*cp[2]*cp[3]*cp[8] + 360*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3] + 120*s[6]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[7] + 60*s[6]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[6] + 560*s[8]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[3]*cp[3] + 20*s[5]*cp[1]*cp[2]*cp[4]*cp[4]*cp[4] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[4]*cp[8] + 330*s[11]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2] + 60*s[5]*cp[1]*cp[1]*cp[3]*cp[4]*cp[6] + 504*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[4] + 12*s[4]*cp[3]*cp[3]*cp[4]*cp[5] + 168*s[8]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[4]*cp[5] + 60*s[5]*cp[1]*cp[2]*cp[2]*cp[4]*cp[6] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[7] + 72*s[9]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[5] + 10*s[5]*cp[1]*cp[1]*cp[1]*cp[6]*cp[6] + 3*s[3]*cp[1]*cp[1]*cp[13] + 180*s[6]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[6] + 8*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[8] + 6*s[3]*cp[3]*cp[4]*cp[8] + 252*s[10]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2] + 30*s[5]*cp[1]*cp[2]*cp[2]*cp[5]*cp[5] + 420*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[2]*cp[3]*cp[5] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[3]*cp[9] + 6*s[6]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[10] + 20*s[5]*cp[2]*cp[3]*cp[3]*cp[3]*cp[4] + 56*s[8]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[3]*cp[6] + 35*s[7]*cp[1]*cp[1]*cp[1]*cp[3]*cp[3]*cp[3]*cp[3] + 14*s[14]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2] + 210*s[7]*cp[1]*cp[1]*cp[1]*cp[1]*cp[2]*cp[4]*cp[5] + 6*s[3]*cp[1]*cp[4]*cp[10] + 30*s[5]*cp[2]*cp[2]*cp[3]*cp[4]*cp[4] + 4*s[4]*cp[2]*cp[2]*cp[2]*cp[9] + 120*s[6]*cp[1]*cp[1]*cp[1]*cp[3]*cp[4]*cp[5] + 6*s[6]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[5] + 12*s[4]*cp[1]*cp[3]*cp[3]*cp[8] + 6*s[3]*cp[3]*cp[5]*cp[7] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[5]*cp[6] + 420*s[7]*cp[1]*cp[1]*cp[1]*cp[2]*cp[3]*cp[3]*cp[4] + 7*s[7]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[2]*cp[3] + 60*s[5]*cp[1]*cp[1]*cp[2]*cp[3]*cp[8] + 180*s[6]*cp[1]*cp[2]*cp[2]*cp[3]*cp[3]*cp[4] + 20*s[5]*cp[1]*cp[1]*cp[1]*cp[5]*cp[7];
        
        # Compute the histogram contribution
        bin_edges = np.linspace(x[0] - p[2], x[0] - p[2], 2)
        g = self.funcs[0](x[0] - p[2], p[0], 0.0, p[1])
        for i in range(1, self.nPeaks_ + 1):
            g += sc[i] * self.funcs[i](x[0] - p[2], p[5], (i-1)*p[7], p[8])
        g += self.funcs[-1](x[0] - p[2], p[3], 0.0, p[4])
        
        return g

    def mip_func(self, x, p):
        # MIP peak function
        # Placeholder for Landau-Gauss peak
        return self.funcs[-1](x[0] - p[2], p[10], p[11], p[12])
    
    def __call__(self, x, p):
        result = self.ppe_func(x, p)
        if self.domip_:
            result += self.mip_func(x, p)
        return result

# Usage example
# ppe_func_instance = PPEFunc(10, True)
# result = ppe_func_instance([0.5], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
